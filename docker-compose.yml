# Copyright(C) 2021, Botnet Detection Framework
# Written by Fabian Astudillo Salinas <fabian.astudillos@ucuenca.edu.ec>
#
# This file comes with ABSOLUTELY NO WARRANTY!
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

version: '3.4'

networks:
  network:

volumes:
  elastic-data:  #for ES data persistency
  #suricata-rules: #for suricata rules transfer between scirius and suricata and for persistency
  #suricata-run: #path where the suricata socket resides
  bndf-logs:
  python-data: #pathe where the bndf output resides

services:
  
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:${ELK_VERSION:-7.13.1}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - TZ=America/Guayaquil
    volumes:
      - ${ELASTIC_DATAPATH:-elastic-data}:/usr/share/elasticsearch/data
#      - ./containers-data/GeoIP/GeoLite2-City.mmdb:/usr/share/GeoIP/GeoLite2-City.mmdb
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      network:
    ports: 
      - 9200:9200
      
  kibana:
    container_name: kibana
    image: kibana:${ELK_VERSION:-7.13.1}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:5601 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
#    environment: 
#      - TZ=America/Guayaquil
    ports: 
      - 5601:5601
    networks:
      network:
    
  logstash:
    build:
      context: logstash-uc/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: logstash
    image: logstash-uc:${ELK_VERSION:-7.13.1}
#    depends_on:
#      scirius:
#        condition: service_healthy #because we need to wait for scirius to populate ILM policy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9600 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
#    environment: 
#      - TZ=America/Guayaquil
    volumes:
#      - suricata-logs:/var/log/suricata:ro
      - ./containers-data/logstash/conf.d/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./containers-data/logstash/templates/elasticsearch7-template.json:/usr/share/logstash/config/elasticsearch7-template.json
#      - ./containers-data/GeoIP/GeoLite2-City.mmdb:/usr/share/GeoIP/GeoLite2-City.mmdb
#    network_mode: host
    ports:
      - 10000:10000/udp
    networks:
      network:

# Removing to use graylog input         
#  suricata:
##    build:
##      context: suricata/
#    container_name: suricata
#    image: jasonish/suricata:master-amd64
#    entrypoint: /etc/suricata/new_entrypoint.sh
#    restart: unless-stopped
##    depends_on:
##      scirius:
##        condition: service_healthy
#    environment:
##      - TZ=America/Guayaquil
#      - SURICATA_OPTIONS=${INTERFACES} -vvv --set sensor-name=suricata
##      - SURICATA_OPTIONS=${INTERFACES} -vvv --pcap-file-delete --set sensor-name=suricata
##      - PUID=${UID}
##      - PGID=${GID}
#    cap_add:
#      - NET_ADMIN
#      - SYS_NICE
#    network_mode: host
#    volumes:
#       - suricata-logs:/var/log/suricata
#       - suricata-rules:/etc/suricata/rules
#       - suricata-run:/var/run/suricata/
#       - ./containers-data/suricata/etc:/etc/suricata
    
  python:
    build:
      context: python-uc/
    container_name: python
    image: python-uc
#    entrypoint: /new_entrypoint.sh
    depends_on:
      elasticsearch:
        condition: service_healthy
#    environment: 
#      - TZ=America/Guayaquil
    networks: 
      network:
#    healthcheck:
#      test: ["CMD-SHELL", "curl --silent --fail elasticsearch:9200 || exit 1"]
#      interval: 30s
#      timeout: 5s
#      retries: 3
#      start_period: 30s

    volumes:
      - python-data:/var/log/bndf
      - ./python-uc/src:/bndf
      #- ./python-uc/queries.py:/queries.py
      #- ./python-uc/FingerprintGenerator.py:/FingerprintGenerator.py
      #- ./python-uc/entrypoint.py:/entrypoint.py
      #- ./python-uc/fingerprint_manualgenerator.py:/fingerprint_manualgenerator.py
      - ./python-uc/tunnel.sh:/tunnel.sh
      - ./python-uc/cedia-dnsmirror:/root/cedia-dnsmirror
      - ./python-uc/whitelist.txt:/root/whitelist.txt

  # scirius:
  #   container_name: scirius
  #   image: ghcr.io/stamusnetworks/scirius:${SCIRIUS_VERSION:-master}
  #   restart: unless-stopped
  #   environment:
  #     - SECRET_KEY=${SCIRIUS_SECRET_KEY}
  #     - DEBUG=${SCIRIUS_DEBUG:-False}
  #     - SCIRIUS_IN_SELKS=True
  #     - USE_ELASTICSEARCH=True
  #     - ELASTICSEARCH_ADDRESS=elasticsearch:9200 #Default
  #     - USE_KIBANA=True
  #     - KIBANA_URL=http://kibana:5601 #Default
  #     - KIBANA_PROXY=True #Get kibana proxied by Scirius
  #     - ALLOWED_HOSTS=* #allow connexions from anywhere
  #     - KIBANA7_DASHBOARDS_PATH=/opt/selks/kibana7-dashboards #where to find kibana dashboards
  #     - SURICATA_UNIX_SOCKET=/var/run/suricata/suricata-command.socket #socket to control suricata
  #     - USE_EVEBOX=True #gives access to evebox in the top menu
  #     - EVEBOX_ADDRESS=evebox:5636 #Default
  #     - USE_SURICATA_STATS=True #display more informations on the suricata page
      
  #   volumes:
  #     - scirius-static:/static/
  #     - scirius-data:/data/
  #     - ./containers-data/scirius/logs/:/logs/
  #     - suricata-rules:/rules
  #     - suricata-run:/var/run/suricata
      
  #   networks:
  #     network:
          
  # evebox:
  #   container_name: evebox
  #   image: jasonish/evebox:master
  #   command: ["-e", "http://elasticsearch:9200"]
  #   restart: unless-stopped
  #   networks:
  #     network:
        
  # nginx:
  #   container_name: nginx
  #   image: nginx
  #   command: ['${NGINX_EXEC:-nginx}', '-g', 'daemon off;']
  #   restart: unless-stopped
  #   volumes:
  #     - scirius-static:/static/:ro
  #     - ./containers-data/nginx/conf.d/:/etc/nginx/conf.d/:ro
  #     - ./containers-data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./containers-data/nginx/ssl:/etc/nginx/ssl:ro
  #   ports:
  #     - 443:443
  #   networks:
  #     network:
